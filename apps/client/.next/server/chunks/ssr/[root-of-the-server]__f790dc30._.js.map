{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///Users/herman/madzone-web2.0/apps/client/src/lib/apollo-client.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\n\nconst httpLink = createHttpLink({\n  uri: process.env.NEXT_PUBLIC_GRAPHQL_URL || 'http://localhost:4000/graphql/public',\n  credentials: 'include',\n});\n\nexport const apolloClient = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache(),\n  defaultOptions: {\n    watchQuery: {\n      errorPolicy: 'all',\n    },\n    query: {\n      errorPolicy: 'all',\n    },\n  },\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;;AAEA,MAAM,WAAW,CAAA,GAAA,oKAAA,CAAA,iBAAc,AAAD,EAAE;IAC9B,KAAK,QAAQ,GAAG,CAAC,uBAAuB,IAAI;IAC5C,aAAa;AACf;AAEO,MAAM,eAAe,IAAI,0KAAA,CAAA,eAAY,CAAC;IAC3C,MAAM;IACN,OAAO,IAAI,wKAAA,CAAA,gBAAa;IACxB,gBAAgB;QACd,YAAY;YACV,aAAa;QACf;QACA,OAAO;YACL,aAAa;QACf;IACF;AACF","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/herman/madzone-web2.0/apps/client/src/components/providers/apollo-wrapper.tsx"],"sourcesContent":["'use client'\n\nimport { ApolloProvider } from '@apollo/client'\nimport { apolloClient } from '@/lib/apollo-client'\nimport { ReactNode } from 'react'\n\ninterface ApolloWrapperProps {\n  children: ReactNode\n}\n\nexport function ApolloWrapper({ children }: ApolloWrapperProps) {\n  return (\n    <ApolloProvider client={apolloClient}>\n      {children}\n    </ApolloProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAUO,SAAS,cAAc,EAAE,QAAQ,EAAsB;IAC5D,qBACE,8OAAC,wKAAA,CAAA,iBAAc;QAAC,QAAQ,gJAAA,CAAA,eAAY;kBACjC;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///Users/herman/madzone-web2.0/apps/client/src/lib/api/auth.ts"],"sourcesContent":["// Authentication API\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000/api'\n\nexport interface LoginCredentials {\n  email: string\n  password: string\n}\n\nexport interface RegisterData {\n  email: string\n  password: string\n  firstName: string\n  lastName: string\n}\n\nexport interface User {\n  id: string\n  email: string\n  firstName: string\n  lastName: string\n  role: 'user' | 'admin' | 'editor'\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface AuthResponse {\n  success: boolean\n  token?: string\n  user?: User\n  message?: string\n}\n\n// Helper function for API requests\nasync function authRequest<T>(\n  endpoint: string,\n  options: RequestInit = {}\n): Promise<T> {\n  const url = `${API_BASE_URL}${endpoint}`\n  \n  const defaultHeaders: HeadersInit = {\n    'Content-Type': 'application/json',\n  }\n\n  const config: RequestInit = {\n    ...options,\n    headers: {\n      ...defaultHeaders,\n      ...options.headers,\n    },\n  }\n\n  try {\n    const response = await fetch(url, config)\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}))\n      throw new Error(errorData.message || `HTTP error! status: ${response.status}`)\n    }\n\n    return await response.json()\n  } catch (error) {\n    console.error('Auth API request failed:', error)\n    throw error\n  }\n}\n\n// Auth API\nexport const authApi = {\n  // Login user\n  async login(credentials: LoginCredentials): Promise<AuthResponse> {\n    return authRequest<AuthResponse>('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials),\n    })\n  },\n\n  // Register user\n  async register(userData: RegisterData): Promise<AuthResponse> {\n    return authRequest<AuthResponse>('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    })\n  },\n\n  // Logout user\n  async logout(): Promise<{ success: boolean }> {\n    const token = typeof window !== 'undefined' ? localStorage.getItem('auth_token') : null\n    \n    const result = await authRequest<{ success: boolean }>('/auth/logout', {\n      method: 'POST',\n      headers: token ? { Authorization: `Bearer ${token}` } : {},\n    })\n\n    // Clear local storage\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('auth_token')\n      localStorage.removeItem('user_data')\n    }\n\n    return result\n  },\n\n  // Get current user\n  async getCurrentUser(): Promise<User> {\n    const token = typeof window !== 'undefined' ? localStorage.getItem('auth_token') : null\n    \n    if (!token) {\n      throw new Error('No auth token found')\n    }\n\n    return authRequest<User>('/auth/me', {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n  },\n\n  // Refresh token\n  async refreshToken(): Promise<AuthResponse> {\n    const token = typeof window !== 'undefined' ? localStorage.getItem('auth_token') : null\n    \n    if (!token) {\n      throw new Error('No auth token found')\n    }\n\n    return authRequest<AuthResponse>('/auth/refresh', {\n      method: 'POST',\n      headers: { Authorization: `Bearer ${token}` },\n    })\n  },\n\n  // Verify token\n  async verifyToken(token: string): Promise<{ valid: boolean; user?: User }> {\n    return authRequest<{ valid: boolean; user?: User }>('/auth/verify', {\n      method: 'POST',\n      headers: { Authorization: `Bearer ${token}` },\n    })\n  },\n}\n\n// Auth utilities\nexport const authUtils = {\n  // Save auth data to localStorage\n  saveAuthData(token: string, user: User) {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('auth_token', token)\n      localStorage.setItem('user_data', JSON.stringify(user))\n    }\n  },\n\n  // Get auth data from localStorage\n  getAuthData(): { token: string | null; user: User | null } {\n    if (typeof window === 'undefined') {\n      return { token: null, user: null }\n    }\n\n    const token = localStorage.getItem('auth_token')\n    const userData = localStorage.getItem('user_data')\n    \n    return {\n      token,\n      user: userData ? JSON.parse(userData) : null,\n    }\n  },\n\n  // Clear auth data\n  clearAuthData() {\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('auth_token')\n      localStorage.removeItem('user_data')\n    }\n  },\n\n  // Check if user is authenticated\n  isAuthenticated(): boolean {\n    const { token } = this.getAuthData()\n    return !!token\n  },\n\n  // Check if user has specific role\n  hasRole(requiredRole: string): boolean {\n    const { user } = this.getAuthData()\n    if (!user) return false\n    \n    const roleHierarchy = {\n      'user': 0,\n      'editor': 1,\n      'admin': 2\n    }\n    \n    const userLevel = roleHierarchy[user.role as keyof typeof roleHierarchy] || 0\n    const requiredLevel = roleHierarchy[requiredRole as keyof typeof roleHierarchy] || 0\n    \n    return userLevel >= requiredLevel\n  },\n}\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;AACrB,MAAM,eAAe,iEAAmC;AA+BxD,mCAAmC;AACnC,eAAe,YACb,QAAgB,EAChB,UAAuB,CAAC,CAAC;IAEzB,MAAM,MAAM,GAAG,eAAe,UAAU;IAExC,MAAM,iBAA8B;QAClC,gBAAgB;IAClB;IAEA,MAAM,SAAsB;QAC1B,GAAG,OAAO;QACV,SAAS;YACP,GAAG,cAAc;YACjB,GAAG,QAAQ,OAAO;QACpB;IACF;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,KAAK;QAElC,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;YACvD,MAAM,IAAI,MAAM,UAAU,OAAO,IAAI,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC/E;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,MAAM;IACR;AACF;AAGO,MAAM,UAAU;IACrB,aAAa;IACb,MAAM,OAAM,WAA6B;QACvC,OAAO,YAA0B,eAAe;YAC9C,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IACF;IAEA,gBAAgB;IAChB,MAAM,UAAS,QAAsB;QACnC,OAAO,YAA0B,kBAAkB;YACjD,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IACF;IAEA,cAAc;IACd,MAAM;QACJ,MAAM,QAAQ,sCAAgC,0BAAqC;QAEnF,MAAM,SAAS,MAAM,YAAkC,gBAAgB;YACrE,QAAQ;YACR,SAAS,sCAAQ,0BAAuC,CAAC;QAC3D;QAEA,sBAAsB;QACtB;;QAKA,OAAO;IACT;IAEA,mBAAmB;IACnB,MAAM;QACJ,MAAM,QAAQ,sCAAgC,0BAAqC;QAEnF,wCAAY;YACV,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,YAAkB,YAAY;YACnC,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAC9C;IACF;IAEA,gBAAgB;IAChB,MAAM;QACJ,MAAM,QAAQ,sCAAgC,0BAAqC;QAEnF,wCAAY;YACV,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,YAA0B,iBAAiB;YAChD,QAAQ;YACR,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAC9C;IACF;IAEA,eAAe;IACf,MAAM,aAAY,KAAa;QAC7B,OAAO,YAA6C,gBAAgB;YAClE,QAAQ;YACR,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAC9C;IACF;AACF;AAGO,MAAM,YAAY;IACvB,iCAAiC;IACjC,cAAa,KAAa,EAAE,IAAU;QACpC;;IAIF;IAEA,kCAAkC;IAClC;QACE,wCAAmC;YACjC,OAAO;gBAAE,OAAO;gBAAM,MAAM;YAAK;QACnC;;;QAEA,MAAM;QACN,MAAM;IAMR;IAEA,kBAAkB;IAClB;QACE;;IAIF;IAEA,iCAAiC;IACjC;QACE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,WAAW;QAClC,OAAO,CAAC,CAAC;IACX;IAEA,kCAAkC;IAClC,SAAQ,YAAoB;QAC1B,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,WAAW;QACjC,IAAI,CAAC,MAAM,OAAO;QAElB,MAAM,gBAAgB;YACpB,QAAQ;YACR,UAAU;YACV,SAAS;QACX;QAEA,MAAM,YAAY,aAAa,CAAC,KAAK,IAAI,CAA+B,IAAI;QAC5E,MAAM,gBAAgB,aAAa,CAAC,aAA2C,IAAI;QAEnF,OAAO,aAAa;IACtB;AACF","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///Users/herman/madzone-web2.0/apps/client/src/store/auth-store.ts"],"sourcesContent":["import { create } from 'zustand'\nimport { devtools, persist } from 'zustand/middleware'\nimport { authApi, authUtils, type User, type LoginCredentials, type RegisterData } from '@/lib/api/auth'\n\ninterface AuthState {\n  // State\n  user: User | null\n  token: string | null\n  isLoading: boolean\n  error: string | null\n  isAuthenticated: boolean\n\n  // Actions\n  login: (credentials: LoginCredentials) => Promise<void>\n  register: (userData: RegisterData) => Promise<void>\n  logout: () => Promise<void>\n  getCurrentUser: () => Promise<void>\n  refreshToken: () => Promise<void>\n  clearError: () => void\n  setLoading: (loading: boolean) => void\n  \n  // Initialization\n  initialize: () => void\n}\n\nexport const useAuthStore = create<AuthState>()(\n  devtools(\n    persist(\n      (set, get) => ({\n        // Initial state\n        user: null,\n        token: null,\n        isLoading: false,\n        error: null,\n        isAuthenticated: false,\n\n        // Actions\n        login: async (credentials: LoginCredentials) => {\n          set({ isLoading: true, error: null })\n          \n          try {\n            const response = await authApi.login(credentials)\n            \n            if (response.success && response.token && response.user) {\n              // Save to localStorage\n              authUtils.saveAuthData(response.token, response.user)\n              \n              // Update store\n              set({\n                user: response.user,\n                token: response.token,\n                isAuthenticated: true,\n                isLoading: false,\n                error: null,\n              })\n            } else {\n              throw new Error(response.message || 'Login failed')\n            }\n          } catch (error) {\n            set({\n              error: error instanceof Error ? error.message : 'Login failed',\n              isLoading: false,\n              isAuthenticated: false,\n            })\n            throw error\n          }\n        },\n\n        register: async (userData: RegisterData) => {\n          set({ isLoading: true, error: null })\n          \n          try {\n            const response = await authApi.register(userData)\n            \n            if (response.success && response.token && response.user) {\n              // Save to localStorage\n              authUtils.saveAuthData(response.token, response.user)\n              \n              // Update store\n              set({\n                user: response.user,\n                token: response.token,\n                isAuthenticated: true,\n                isLoading: false,\n                error: null,\n              })\n            } else {\n              throw new Error(response.message || 'Registration failed')\n            }\n          } catch (error) {\n            set({\n              error: error instanceof Error ? error.message : 'Registration failed',\n              isLoading: false,\n              isAuthenticated: false,\n            })\n            throw error\n          }\n        },\n\n        logout: async () => {\n          set({ isLoading: true })\n          \n          try {\n            await authApi.logout()\n          } catch (error) {\n            console.error('Logout API call failed:', error)\n            // Continue with logout even if API call fails\n          }\n          \n          // Clear localStorage\n          authUtils.clearAuthData()\n          \n          // Reset store\n          set({\n            user: null,\n            token: null,\n            isAuthenticated: false,\n            isLoading: false,\n            error: null,\n          })\n        },\n\n        getCurrentUser: async () => {\n          const { token } = get()\n          \n          if (!token) {\n            set({ isAuthenticated: false, user: null })\n            return\n          }\n\n          set({ isLoading: true, error: null })\n          \n          try {\n            const user = await authApi.getCurrentUser()\n            set({\n              user,\n              isAuthenticated: true,\n              isLoading: false,\n              error: null,\n            })\n          } catch (error) {\n            console.error('Get current user failed:', error)\n            \n            // Token might be invalid, clear auth data\n            authUtils.clearAuthData()\n            set({\n              user: null,\n              token: null,\n              isAuthenticated: false,\n              isLoading: false,\n              error: 'Session expired',\n            })\n          }\n        },\n\n        refreshToken: async () => {\n          const { token } = get()\n          \n          if (!token) {\n            return\n          }\n\n          try {\n            const response = await authApi.refreshToken()\n            \n            if (response.success && response.token && response.user) {\n              // Save new token\n              authUtils.saveAuthData(response.token, response.user)\n              \n              // Update store\n              set({\n                user: response.user,\n                token: response.token,\n                isAuthenticated: true,\n                error: null,\n              })\n            }\n          } catch (error) {\n            console.error('Token refresh failed:', error)\n            \n            // Refresh failed, logout user\n            get().logout()\n          }\n        },\n\n        clearError: () => set({ error: null }),\n        \n        setLoading: (loading: boolean) => set({ isLoading: loading }),\n\n        // Initialize from localStorage\n        initialize: () => {\n          const { token, user } = authUtils.getAuthData()\n          \n          if (token && user) {\n            set({\n              token,\n              user,\n              isAuthenticated: true,\n            })\n            \n            // Verify token is still valid\n            get().getCurrentUser()\n          }\n        },\n      }),\n      {\n        name: 'auth-store',\n        // Only persist essential data\n        partialize: (state) => ({\n          token: state.token,\n          user: state.user,\n          isAuthenticated: state.isAuthenticated,\n        }),\n      }\n    ),\n    {\n      name: 'auth-store',\n    }\n  )\n)\n\n// Selector hooks for convenience\nexport const useAuth = () => {\n  const store = useAuthStore()\n  return {\n    user: store.user,\n    isAuthenticated: store.isAuthenticated,\n    isLoading: store.isLoading,\n    error: store.error,\n    login: store.login,\n    register: store.register,\n    logout: store.logout,\n    clearError: store.clearError,\n  }\n}\n\nexport const useAuthActions = () => {\n  const store = useAuthStore()\n  return {\n    login: store.login,\n    register: store.register,\n    logout: store.logout,\n    getCurrentUser: store.getCurrentUser,\n    refreshToken: store.refreshToken,\n    clearError: store.clearError,\n    initialize: store.initialize,\n  }\n}\n\n// Auth guards\nexport const useAuthGuard = () => {\n  const { isAuthenticated, user } = useAuth()\n  \n  return {\n    isAuthenticated,\n    isAdmin: user?.role === 'admin',\n    isEditor: user?.role === 'editor' || user?.role === 'admin',\n    hasRole: (role: string) => authUtils.hasRole(role),\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":["file:///Users/herman/madzone-web2.0/apps/client/src/components/providers/auth-provider.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect } from 'react'\nimport { useAuthStore } from '@/store/auth-store'\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const initialize = useAuthStore((state) => state.initialize)\n\n  useEffect(() => {\n    initialize()\n  }, [initialize])\n\n  return <>{children}</>\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,aAAa,CAAA,GAAA,+IAAA,CAAA,eAAY,AAAD,EAAE,CAAC,QAAU,MAAM,UAAU;IAE3D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;KAAW;IAEf,qBAAO;kBAAG;;AACZ","debugId":null}}]
}